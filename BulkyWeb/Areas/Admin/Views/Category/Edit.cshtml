@model Bulky.Models.Category

@{
    ViewData["Title"] = "Edit Category";
}

<div class="container-fluid px-2 px-sm-3 py-2 py-md-4">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5">
            <div class="card shadow-lg border-0">
                <!-- Card Header -->
                <div class="card-header bg-primary bg-gradient text-white py-3 py-md-4">
                    <div class="text-center">
                        <h1 class="fs-4 fs-md-3 fw-normal mb-1">
                            <i class="bi bi-pencil-square me-2"></i>Edit Category
                        </h1>
                        <p class="mb-0 opacity-75 small d-none d-md-block">Update category information</p>
                        <p class="mb-0 opacity-75 small d-md-none">Update category</p>
                    </div>
                </div>

                <!-- Card Body -->
                <div class="card-body p-3 p-sm-4 p-md-5">
                    <form asp-action="Edit" class="needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger small mb-3 d-none" role="alert"></div>
                        
                        <!-- Hidden ID Field -->
                        <input type="hidden" asp-for="Id" />

                        <!-- Current Category Info -->
                        <div class="alert alert-primary border-0 py-2 px-3 mb-3 mb-md-4 d-flex align-items-center" style="background-color: rgba(25, 46, 47, 0.1); border-left: 4px solid #192E2F !important;">
                            <i class="bi bi-info-circle me-2 text-primary"></i>
                            <small class="text-primary">
                                <strong>Editing:</strong> Category ID @Model.Id
                                <span class="d-none d-sm-inline">- Make your changes below</span>
                            </small>
                        </div>
                        
                        <!-- Name Field -->
                        <div class="mb-3 mb-md-4">
                            <div class="form-floating">
                                <input asp-for="Name" 
                                       class="form-control form-control-lg border-primary" 
                                       placeholder="Enter Category Name"
                                       maxlength="50"
                                       required 
                                       style="border-width: 2px;" />
                                <label asp-for="Name" class="text-primary fw-medium">
                                    <i class="bi bi-tag me-1"></i>Category Name
                                </label>
                            </div>
                            <span asp-validation-for="Name" class="text-danger small mt-1 d-block"></span>
                            <div class="form-text small text-primary">
                                <i class="bi bi-info-circle me-1"></i>
                                <span id="nameHelpText">Update the category name (max 50 characters)</span>
                            </div>
                        </div>

                        <!-- Display Order Field -->
                        <div class="mb-4 mb-md-5">
                            <div class="form-floating">
                                <input asp-for="DisplayOrder" 
                                       class="form-control form-control-lg border-primary" 
                                       placeholder="Enter Display Order"
                                       type="number"
                                       min="1"
                                       max="100"
                                       required 
                                       style="border-width: 2px;" />
                                <label asp-for="DisplayOrder" class="text-primary fw-medium">
                                    <i class="bi bi-sort-numeric-up me-1"></i>Display Order
                                </label>
                            </div>
                            <span asp-validation-for="DisplayOrder" class="text-danger small mt-1 d-block"></span>
                            <div class="form-text small text-primary">
                                <i class="bi bi-info-circle me-1"></i>
                                <span id="orderHelpText">Set the display order (1-100)</span>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row g-2 g-md-3">
                            <div class="col-12 col-sm-6">
                                <button type="submit" class="btn btn-primary w-100 py-2 py-md-3 shadow-sm fw-medium">
                                    <i class="bi bi-check-circle me-2"></i>
                                    <span class="d-none d-sm-inline">Update Category</span>
                                    <span class="d-sm-none">Update</span>
                                </button>
                            </div>
                            <div class="col-12 col-sm-6">
                                <a asp-action="Index" class="btn btn-secondary w-100 py-2 py-md-3 shadow-sm fw-medium">
                                    <i class="bi bi-arrow-left me-2"></i>
                                    <span class="d-none d-sm-inline">Back to List</span>
                                    <span class="d-sm-none">Back</span>
                                </a>
                            </div>
                        </div>

                        <!-- Additional Actions (Desktop Only) -->
                        <div class="d-none d-md-flex justify-content-between align-items-center mt-4 pt-3 border-top border-primary" style="border-width: 2px !important;">
                            <small class="text-muted d-flex align-items-center">
                                <i class="bi bi-clock me-1 text-primary"></i>
                                Last modified: <span class="ms-1 text-primary fw-medium">@DateTime.Now.ToString("MMM dd, yyyy")</span>
                            </small>
                            <a asp-action="Delete" asp-route-id="@Model.Id" 
                               class="btn btn-outline-danger btn-sm shadow-sm">
                                <i class="bi bi-trash me-1"></i>Delete
                            </a>
                        </div>

                        <!-- Progress Indicator -->
                        <div class="text-center mt-3 d-none" id="loadingIndicator">
                            <div class="spinner-border spinner-border-sm text-primary me-2" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <small class="text-primary fw-medium">Updating category...</small>
                        </div>
                    </form>
                </div>

                <!-- Card Footer with Tips -->
                <div class="card-footer text-center py-3 py-md-3 d-none d-md-block" style="background: linear-gradient(135deg, rgba(25, 46, 47, 0.05) 0%, rgba(75, 113, 71, 0.05) 100%); border-top: 2px solid rgba(25, 46, 47, 0.1);">
                    <small class="text-primary">
                        <i class="bi bi-lightbulb me-1 text-warning"></i>
                        <strong>Tip:</strong> Changes will affect how categories are displayed throughout the system
                    </small>
                </div>
            </div>

            <!-- Mobile Actions Card -->
            <div class="d-md-none mt-3">
                <div class="card shadow-sm border-0">
                    <div class="card-body py-3 px-3" style="background: linear-gradient(135deg, rgba(202, 25, 41, 0.05) 0%, rgba(202, 25, 41, 0.1) 100%); border-left: 4px solid #CA1929;">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-exclamation-triangle me-2 text-danger"></i>
                                <small class="text-danger fw-medium">
                                    Need to delete this category?
                                </small>
                            </div>
                            <a asp-action="Delete" asp-route-id="@Model.Id" 
                               class="btn btn-outline-danger btn-sm shadow-sm">
                                <i class="bi bi-trash me-1"></i>Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Mobile Help Card -->
            <div class="card mt-3 d-md-none shadow-sm border-0">
                <div class="card-body py-3 px-3" style="background: linear-gradient(135deg, rgba(189, 116, 24, 0.05) 0%, rgba(189, 116, 24, 0.1) 100%); border-left: 4px solid #BD7418;">
                    <small class="d-flex align-items-center text-warning">
                        <i class="bi bi-lightbulb me-2"></i>
                        <span class="fw-medium">Changes affect system-wide category display</span>
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced form validation with theme colors
            const forms = document.querySelectorAll('.needs-validation');
            const loadingIndicator = document.getElementById('loadingIndicator');
            
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        
                        // Show validation summary if there are errors
                        const validationSummary = form.querySelector('[asp-validation-summary]');
                        if (validationSummary) {
                            validationSummary.classList.remove('d-none');
                        }
                        
                        // Add error styling to invalid fields
                        const invalidFields = form.querySelectorAll(':invalid');
                        invalidFields.forEach(field => {
                            field.style.borderColor = '#CA1929';
                            field.style.borderWidth = '2px';
                        });
                    } else {
                        // Show loading indicator on valid submission
                        if (loadingIndicator) {
                            loadingIndicator.classList.remove('d-none');
                        }
                        
                        // Disable submit button to prevent double submission
                        const submitBtn = form.querySelector('button[type="submit"]');
                        if (submitBtn) {
                            submitBtn.disabled = true;
                            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status"></span>Updating...';
                        }
                    }
                    
                    form.classList.add('was-validated');
                }, false);
            });

            // Real-time character counter for name field with theme colors
            const nameInput = document.querySelector('input[name="Name"]');
            const nameHelpText = document.getElementById('nameHelpText');
            if (nameInput && nameHelpText) {
                const maxLength = nameInput.getAttribute('maxlength');
                
                function updateNameCounter() {
                    const currentLength = nameInput.value.length;
                    const remaining = maxLength - currentLength;
                    
                    nameHelpText.innerHTML = `Update the category name (${remaining} characters remaining)`;
                    
                    if (remaining < 10) {
                        nameHelpText.parentElement.classList.remove('text-primary');
                        nameHelpText.parentElement.classList.add('text-warning');
                        nameInput.style.borderColor = '#BD7418';
                    } else if (remaining < 5) {
                        nameHelpText.parentElement.classList.remove('text-primary', 'text-warning');
                        nameHelpText.parentElement.classList.add('text-danger');
                        nameInput.style.borderColor = '#CA1929';
                    } else {
                        nameHelpText.parentElement.classList.remove('text-warning', 'text-danger');
                        nameHelpText.parentElement.classList.add('text-primary');
                        nameInput.style.borderColor = '#192E2F';
                    }
                }
                
                nameInput.addEventListener('input', updateNameCounter);
                nameInput.addEventListener('focus', function() {
                    this.style.boxShadow = '0 0 0 0.25rem rgba(25, 46, 47, 0.25)';
                });
                nameInput.addEventListener('blur', function() {
                    this.style.boxShadow = '';
                });
                updateNameCounter(); // Initialize counter
            }

            // Display Order validation and help with theme colors
            const orderInput = document.querySelector('input[name="DisplayOrder"]');
            const orderHelpText = document.getElementById('orderHelpText');
            if (orderInput && orderHelpText) {
                function updateOrderHelp() {
                    const value = parseInt(orderInput.value);
                    
                    if (value < 1 || value > 100) {
                        orderHelpText.innerHTML = 'Please enter a value between 1 and 100';
                        orderHelpText.parentElement.classList.remove('text-primary');
                        orderHelpText.parentElement.classList.add('text-danger');
                        orderInput.style.borderColor = '#CA1929';
                    } else {
                        orderHelpText.innerHTML = 'Set the display order (1-100)';
                        orderHelpText.parentElement.classList.remove('text-danger');
                        orderHelpText.parentElement.classList.add('text-primary');
                        orderInput.style.borderColor = '#192E2F';
                    }
                }
                
                orderInput.addEventListener('input', updateOrderHelp);
                orderInput.addEventListener('focus', function() {
                    this.style.boxShadow = '0 0 0 0.25rem rgba(25, 46, 47, 0.25)';
                });
                orderInput.addEventListener('blur', function() {
                    this.style.boxShadow = '';
                });
                updateOrderHelp(); // Initialize
            }

            // Confirmation for delete action with themed modal
            const deleteLinks = document.querySelectorAll('a[href*="Delete"]');
            deleteLinks.forEach(function(link) {
                link.addEventListener('click', function(e) {
                    if (!confirm('⚠️ Are you sure you want to delete this category?\n\nThis action cannot be undone and may affect other parts of the system.')) {
                        e.preventDefault();
                    }
                });
            });

            // Touch-friendly form interactions for mobile
            if ('ontouchstart' in window) {
                const formControls = document.querySelectorAll('.form-control');
                formControls.forEach(function(control) {
                    control.addEventListener('focus', function() {
                        // Scroll to input on mobile when focused
                        setTimeout(() => {
                            this.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }, 300);
                    });
                });
            }

            // Enhanced change tracking with visual feedback
            let changesMade = false;
            const inputs = document.querySelectorAll('input[type="text"], input[type="number"]');
            const originalValues = {};
            
            inputs.forEach(function(input) {
                originalValues[input.name] = input.value;
                
                input.addEventListener('input', function() {
                    changesMade = (this.value !== originalValues[this.name]);
                    
                    // Add visual indicator for changes with theme colors
                    if (changesMade && this.value !== originalValues[this.name]) {
                        this.style.borderColor = '#BD7418';
                        this.style.borderWidth = '2px';
                        this.style.backgroundColor = 'rgba(189, 116, 24, 0.05)';
                    } else {
                        this.style.borderColor = '#192E2F';
                        this.style.backgroundColor = '';
                    }
                });
            });

            // Warn user about unsaved changes when leaving
            window.addEventListener('beforeunload', function(e) {
                if (changesMade) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });

            // Add success animation on valid input
            inputs.forEach(function(input) {
                input.addEventListener('blur', function() {
                    if (this.checkValidity() && this.value.length > 0) {
                        this.style.borderColor = '#4b7147';
                        setTimeout(() => {
                            if (this.value === originalValues[this.name]) {
                                this.style.borderColor = '#192E2F';
                            } else {
                                this.style.borderColor = '#BD7418';
                            }
                        }, 1000);
                    }
                });
            });
        });
    </script>
}
