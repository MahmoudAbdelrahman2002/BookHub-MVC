@model Bulky.Models.Models.Company

@{
    ViewData["Title"] = "Edit Company - BulkyWeb";
}

<div class="container-fluid px-2 px-sm-3 py-2 py-md-4">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10 col-xl-8">
            <!-- Page Header -->
            <div class="mb-3 mb-md-4 text-center">
                <h1 class="display-6 fw-bold text-primary mb-2 fs-4 fs-sm-3 fs-md-2">
                    <i class="bi bi-building-gear me-2"></i>Edit Business Partner
                </h1>
                <p class="text-muted lead d-none d-md-block mb-0">Update @Model.Name's information in your business network</p>
                <p class="text-muted small d-md-none mb-0">Edit company information</p>
            </div>

            <div class="card shadow-lg border-0" style="border-radius: 15px;">
                <!-- Card Header -->
                <div class="card-header bg-primary bg-gradient text-white py-3 py-md-4" 
                     style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #192E2F 0%, #3A595C 100%) !important;">
                    <div class="row align-items-center">
                        <div class="col-12 col-md-8">
                            <h2 class="fs-5 fs-md-4 fw-medium mb-1">
                                <i class="bi bi-building me-2"></i>Company Information
                            </h2>
                            <p class="mb-0 opacity-90 small">
                                <span class="d-none d-md-inline">Update the information below to modify company details</span>
                                <span class="d-md-none">Modify company details</span>
                            </p>
                        </div>
                        <div class="col-12 col-md-4 text-md-end mt-2 mt-md-0">
                            <span class="badge bg-light text-primary px-3 py-2">
                                <i class="bi bi-hash me-1"></i>ID: @Model.Id
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Card Body -->
                <div class="card-body p-3 p-sm-4 p-md-5">
                    <form asp-action="Edit" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger border-0 rounded-3 small mb-4 d-none" role="alert"></div>
                        
                        <!-- Change Tracking Indicator -->
                        <div class="change-indicator alert alert-info border-0 rounded-3 d-none mb-4" style="background: linear-gradient(135deg, rgba(13, 202, 240, 0.1) 0%, rgba(13, 202, 240, 0.05) 100%);">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-info-circle me-2 text-info"></i>
                                <span class="text-info fw-medium">You have unsaved changes</span>
                            </div>
                        </div>

                        <!-- Section 1: Company Information -->
                        <div class="form-section mb-4 mb-md-5">
                            <h4 class="section-title mb-3">
                                <i class="bi bi-building-fill me-2 text-primary"></i>Company Details
                            </h4>
                            
                            <!-- Company Name -->
                            <div class="mb-3 mb-md-4">
                                <div class="form-floating">
                                    <input asp-for="Name" 
                                           class="form-control form-control-lg border-primary" 
                                           placeholder="Enter Company Name"
                                           maxlength="100"
                                           required 
                                           style="border-width: 2px;" 
                                           data-original-value="@Model.Name" />
                                    <label asp-for="Name" class="text-primary fw-medium">
                                        <i class="bi bi-building me-1"></i>Company Name
                                    </label>
                                </div>
                                <span asp-validation-for="Name" class="text-danger small mt-1 d-block"></span>
                                <div class="form-text small text-primary mt-2" id="nameHelpText">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Update the official company name (max 100 characters)
                                </div>
                            </div>
                        </div>

                        <!-- Section 2: Address Information -->
                        <div class="form-section mb-4 mb-md-5">
                            <h4 class="section-title mb-3">
                                <i class="bi bi-geo-alt-fill me-2 text-success"></i>Business Address
                                <small class="text-muted ms-2">(Optional)</small>
                            </h4>
                            
                            <!-- Street Address -->
                            <div class="mb-3 mb-md-4">
                                <div class="form-floating">
                                    <input asp-for="StreetAddress" 
                                           class="form-control form-control-lg border-success" 
                                           placeholder="Enter Street Address"
                                           maxlength="200"
                                           style="border-width: 2px;" 
                                           data-original-value="@Model.StreetAddress" />
                                    <label asp-for="StreetAddress" class="text-success fw-medium">
                                        <i class="bi bi-house me-1"></i>Street Address
                                    </label>
                                </div>
                                <span asp-validation-for="StreetAddress" class="text-danger small mt-1 d-block"></span>
                                <div class="form-text small text-success mt-2">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Complete street address including number and street name
                                </div>
                            </div>

                            <!-- City, State, Postal Code Row -->
                            <div class="row g-2 g-md-3">
                                <!-- City -->
                                <div class="col-md-6">
                                    <div class="form-floating mb-3 mb-md-4">
                                        <input asp-for="City" 
                                               class="form-control form-control-lg border-success" 
                                               placeholder="Enter City"
                                               maxlength="50"
                                               style="border-width: 2px;" 
                                               data-original-value="@Model.City" />
                                        <label asp-for="City" class="text-success fw-medium">
                                            <i class="bi bi-building me-1"></i>City
                                        </label>
                                        <span asp-validation-for="City" class="text-danger small mt-1 d-block"></span>
                                    </div>
                                </div>
                                
                                <!-- State -->
                                <div class="col-md-3">
                                    <div class="form-floating mb-3 mb-md-4">
                                        <input asp-for="State" 
                                               class="form-control form-control-lg border-success" 
                                               placeholder="Enter State"
                                               maxlength="50"
                                               style="border-width: 2px;" 
                                               data-original-value="@Model.State" />
                                        <label asp-for="State" class="text-success fw-medium">
                                            <i class="bi bi-map me-1"></i>State
                                        </label>
                                        <span asp-validation-for="State" class="text-danger small mt-1 d-block"></span>
                                    </div>
                                </div>
                                
                                <!-- Postal Code -->
                                <div class="col-md-3">
                                    <div class="form-floating mb-3 mb-md-4">
                                        <input asp-for="PostalCode" 
                                               class="form-control form-control-lg border-success" 
                                               placeholder="Enter Postal Code"
                                               maxlength="20"
                                               style="border-width: 2px;" 
                                               data-original-value="@Model.PostalCode" />
                                        <label asp-for="PostalCode" class="text-success fw-medium">
                                            <i class="bi bi-mailbox me-1"></i>Postal Code
                                        </label>
                                        <span asp-validation-for="PostalCode" class="text-danger small mt-1 d-block"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Section 3: Contact Information -->
                        <div class="form-section mb-4 mb-md-5">
                            <h4 class="section-title mb-3">
                                <i class="bi bi-telephone-fill me-2 text-info"></i>Contact Information
                                <small class="text-muted ms-2">(Optional)</small>
                            </h4>
                            
                            <!-- Phone Number -->
                            <div class="mb-4 mb-md-5">
                                <div class="form-floating">
                                    <input asp-for="PhoneNumber" 
                                           class="form-control form-control-lg border-info" 
                                           placeholder="Enter Phone Number"
                                           maxlength="20"
                                           type="tel"
                                           style="border-width: 2px;" 
                                           data-original-value="@Model.PhoneNumber" />
                                    <label asp-for="PhoneNumber" class="text-info fw-medium">
                                        <i class="bi bi-telephone me-1"></i>Phone Number
                                    </label>
                                </div>
                                <span asp-validation-for="PhoneNumber" class="text-danger small mt-1 d-block"></span>
                                <div class="form-text small text-info mt-2">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Primary business phone number with area code
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row g-2 g-md-3">
                            <div class="col-12 col-sm-4">
                                <button type="submit" class="btn btn-success w-100 py-2 py-md-3 shadow-lg fw-medium" 
                                        style="border-radius: 12px;">
                                    <i class="bi bi-check-circle me-2"></i>
                                    <span class="d-none d-sm-inline">Save Changes</span>
                                    <span class="d-sm-none">Save</span>
                                </button>
                            </div>
                            <div class="col-12 col-sm-4">
                                <button type="button" class="btn btn-outline-secondary w-100 py-2 py-md-3 fw-medium" 
                                        style="border-radius: 12px;" id="resetBtn">
                                    <i class="bi bi-arrow-clockwise me-2"></i>
                                    <span class="d-none d-sm-inline">Reset Form</span>
                                    <span class="d-sm-none">Reset</span>
                                </button>
                            </div>
                            <div class="col-12 col-sm-4">
                                <a asp-action="Index" class="btn btn-secondary w-100 py-2 py-md-3 shadow-sm fw-medium" 
                                   style="border-radius: 12px;">
                                    <i class="bi bi-arrow-left me-2"></i>
                                    <span class="d-none d-sm-inline">Back to List</span>
                                    <span class="d-sm-none">Back</span>
                                </a>
                            </div>
                        </div>

                        <!-- Progress Indicator (Hidden by default) -->
                        <div class="text-center mt-4 d-none" id="loadingIndicator">
                            <div class="spinner-border spinner-border-sm text-success me-2" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <small class="text-success fw-medium">Updating company information...</small>
                        </div>
                    </form>
                </div>

                <!-- Card Footer with Last Updated -->
                <div class="card-footer border-0 py-3" 
                     style="background: linear-gradient(135deg, rgba(25, 46, 47, 0.03) 0%, rgba(75, 113, 71, 0.03) 100%); border-radius: 0 0 15px 15px;">
                    <div class="row align-items-center">
                        <div class="col-12 col-md-6">
                            <small class="text-primary d-flex align-items-center">
                                <i class="bi bi-clock-history me-2"></i>
                                <span class="fw-medium d-none d-md-inline">Company: @Model.Name</span>
                                <span class="fw-medium d-md-none">@Model.Name</span>
                            </small>
                        </div>
                        <div class="col-12 col-md-6 text-md-end mt-2 mt-md-0">
                            <small class="text-muted">
                                <i class="bi bi-shield-check me-1"></i>
                                <span class="d-none d-sm-inline">Changes are automatically validated</span>
                                <span class="d-sm-none">Auto-validated</span>
                            </small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Mobile Actions Card -->
            <div class="card mt-3 d-md-none shadow-sm border-0" style="border-radius: 12px;">
                <div class="card-body py-3 px-3" 
                     style="background: linear-gradient(135deg, rgba(189, 116, 24, 0.05) 0%, rgba(189, 116, 24, 0.1) 100%); border-left: 4px solid #BD7418 !important;">
                    <div class="row align-items-center g-2">
                        <div class="col-8">
                            <small class="d-flex align-items-center text-warning fw-medium">
                                <i class="bi bi-lightbulb me-2"></i>
                                <span>Tap Reset to restore original values</span>
                            </small>
                        </div>
                        <div class="col-4 text-end">
                            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info btn-sm w-100">
                                <i class="bi bi-eye me-1"></i>View
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Actions Card -->
            <div class="card mt-3 shadow-sm border-0" style="border-radius: 12px;">
                <div class="card-body py-3 px-3" 
                     style="background: linear-gradient(135deg, rgba(220, 53, 69, 0.05) 0%, rgba(220, 53, 69, 0.02) 100%); border-left: 4px solid #dc3545 !important;">
                    <div class="row align-items-center g-2">
                        <div class="col-12 col-md-6">
                            <small class="d-flex align-items-center text-danger fw-medium">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                <span>Need to remove this company?</span>
                            </small>
                        </div>
                        <div class="col-12 col-md-6 text-md-end">
                            <a asp-action="Delete" asp-route-id="@Model.Id" 
                               class="btn btn-outline-danger btn-sm"
                               onclick="return confirm('⚠️ Delete @Model.Name?\n\nThis action cannot be undone and may affect associated users.')">
                                <i class="bi bi-trash me-1"></i>
                                <span class="d-none d-sm-inline">Delete Company</span>
                                <span class="d-sm-none">Delete</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeFormValidation();
            initializeChangeTracking();
            initializeCharacterCounters();
            initializePhoneFormatting();
            initializeMobileEnhancements();
            initializeResetFunctionality();
        });

        function initializeFormValidation() {
            const forms = document.querySelectorAll('.needs-validation');
            const loadingIndicator = document.getElementById('loadingIndicator');
            
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        
                        // Show validation summary if there are errors
                        const validationSummary = form.querySelector('[asp-validation-summary]');
                        if (validationSummary) {
                            validationSummary.classList.remove('d-none');
                        }
                        
                        // Add error styling to invalid fields
                        const invalidFields = form.querySelectorAll(':invalid');
                        invalidFields.forEach(field => {
                            field.style.borderColor = '#dc3545';
                            field.style.borderWidth = '2px';
                            field.style.backgroundColor = 'rgba(220, 53, 69, 0.05)';
                        });
                    } else {
                        // Show loading indicator on valid submission
                        if (loadingIndicator) {
                            loadingIndicator.classList.remove('d-none');
                        }
                        
                        // Disable submit button to prevent double submission
                        const submitBtn = form.querySelector('button[type="submit"]');
                        if (submitBtn) {
                            submitBtn.disabled = true;
                            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status"></span>Saving Changes...';
                        }
                    }
                    
                    form.classList.add('was-validated');
                }, false);
            });

            // Real-time validation feedback
            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.checkValidity()) {
                        this.style.borderColor = '#198754';
                        this.style.backgroundColor = '';
                    } else if (this.value.length > 0) {
                        this.style.borderColor = '#dc3545';
                        this.style.backgroundColor = 'rgba(220, 53, 69, 0.05)';
                    }
                });

                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.style.borderColor = '#198754';
                        this.style.backgroundColor = '';
                    }
                });

                // Enhanced focus styling
                input.addEventListener('focus', function() {
                    this.style.boxShadow = '0 0 0 0.25rem rgba(25, 46, 47, 0.25)';
                });
                
                input.addEventListener('blur', function() {
                    this.style.boxShadow = '';
                });
            });
        }

        function initializeChangeTracking() {
            const changeIndicator = document.querySelector('.change-indicator');
            const inputs = document.querySelectorAll('input[data-original-value]');
            let hasChanges = false;

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    const currentValue = this.value || '';
                    const originalValue = this.getAttribute('data-original-value') || '';
                    const isChanged = currentValue !== originalValue;
                    
                    // Update change indicator for this field
                    if (isChanged && !this.classList.contains('changed')) {
                        this.classList.add('changed');
                        this.style.borderLeftWidth = '4px';
                        this.style.borderLeftColor = '#BD7418';
                        this.style.backgroundColor = 'rgba(189, 116, 24, 0.05)';
                    } else if (!isChanged && this.classList.contains('changed')) {
                        this.classList.remove('changed');
                        this.style.borderLeftWidth = '2px';
                        this.style.borderLeftColor = '';
                        this.style.backgroundColor = '';
                    }
                    
                    // Check if any field has changes
                    hasChanges = Array.from(inputs).some(inp => inp.classList.contains('changed'));
                    
                    if (hasChanges && changeIndicator.classList.contains('d-none')) {
                        changeIndicator.classList.remove('d-none');
                        changeIndicator.style.animation = 'fadeInDown 0.3s ease';
                    } else if (!hasChanges && !changeIndicator.classList.contains('d-none')) {
                        changeIndicator.classList.add('d-none');
                    }
                });
            });

            // Warn before leaving page with unsaved changes
            window.addEventListener('beforeunload', function(e) {
                if (hasChanges) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });
        }

        function initializeCharacterCounters() {
            // Company name character counter
            const nameInput = document.querySelector('input[name="Name"]');
            const nameHelpText = document.getElementById('nameHelpText');
            
            if (nameInput && nameHelpText) {
                const maxLength = nameInput.getAttribute('maxlength');
                
                nameInput.addEventListener('input', function() {
                    const currentLength = this.value.length;
                    const remaining = maxLength - currentLength;
                    
                    nameHelpText.innerHTML = `<i class="bi bi-info-circle me-1"></i>Update the official company name (${remaining} characters remaining)`;
                    
                    if (remaining < 10) {
                        nameHelpText.classList.remove('text-primary');
                        nameHelpText.classList.add('text-warning');
                    } else if (remaining < 5) {
                        nameHelpText.classList.remove('text-primary', 'text-warning');
                        nameHelpText.classList.add('text-danger');
                    } else {
                        nameHelpText.classList.remove('text-warning', 'text-danger');
                        nameHelpText.classList.add('text-primary');
                    }
                });
            }
        }

        function initializePhoneFormatting() {
            const phoneInput = document.querySelector('input[name="PhoneNumber"]');
            
            if (phoneInput) {
                phoneInput.addEventListener('input', function() {
                    // Remove non-numeric characters except + and -
                    let value = this.value.replace(/[^\d+\-\(\)\s]/g, '');
                    
                    // Basic US phone number formatting
                    if (value.length === 10 && !value.includes('+')) {
                        value = value.replace(/(\d{3})(\d{3})(\d{4})/, '($1) $2-$3');
                    }
                    
                    this.value = value;
                });
            }
        }

        function initializeResetFunctionality() {
            const resetBtn = document.getElementById('resetBtn');
            const inputs = document.querySelectorAll('input[data-original-value]');
            
            if (resetBtn) {
                resetBtn.addEventListener('click', function() {
                    if (confirm('Reset all fields to their original values?\n\nThis will discard any unsaved changes.')) {
                        inputs.forEach(input => {
                            const originalValue = input.getAttribute('data-original-value') || '';
                            input.value = originalValue;
                            
                            // Remove change styling
                            input.classList.remove('changed');
                            input.style.borderLeftWidth = '2px';
                            input.style.borderLeftColor = '';
                            input.style.backgroundColor = '';
                            input.style.borderColor = '';
                        });
                        
                        // Hide change indicator
                        const changeIndicator = document.querySelector('.change-indicator');
                        if (changeIndicator) {
                            changeIndicator.classList.add('d-none');
                        }
                        
                        // Reset form validation
                        const form = document.querySelector('.needs-validation');
                        if (form) {
                            form.classList.remove('was-validated');
                        }
                        
                        // Show success message
                        showNotification('Form has been reset to original values', 'info');
                    }
                });
            }
        }

        function initializeMobileEnhancements() {
            // Touch-friendly form interactions for mobile
            if ('ontouchstart' in window) {
                const formControls = document.querySelectorAll('.form-control');
                formControls.forEach(function(control) {
                    control.addEventListener('focus', function() {
                        // Scroll to input on mobile when focused
                        setTimeout(() => {
                            this.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }, 300);
                    });
                });

                // Add touch feedback for buttons
                const buttons = document.querySelectorAll('.btn');
                buttons.forEach(function(btn) {
                    btn.addEventListener('touchstart', function() {
                        this.style.transform = 'scale(0.98)';
                    });
                    btn.addEventListener('touchend', function() {
                        setTimeout(() => {
                            this.style.transform = '';
                        }, 150);
                    });
                });
            }

            // Form section animations on scroll (desktop only)
            if (window.innerWidth >= 768 && 'IntersectionObserver' in window) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                        }
                    });
                }, { threshold: 0.1 });

                const sections = document.querySelectorAll('.form-section');
                sections.forEach((section, index) => {
                    section.style.opacity = '0';
                    section.style.transform = 'translateY(20px)';
                    section.style.transition = `opacity 0.6s ease ${index * 0.2}s, transform 0.6s ease ${index * 0.2}s`;
                    observer.observe(section);
                });
            }
        }

        function showNotification(message, type) {
            // Create and show a toast notification
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '9999';
            toast.style.minWidth = '300px';
            toast.style.borderRadius = '10px';
            toast.innerHTML = `
                <i class="bi bi-info-circle me-2"></i>
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            
            document.body.appendChild(toast);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 3000);
        }
    </script>
}

<style>
    /* Company Edit Page Styling */
    .form-floating > label {
        font-family: 'Georgia', serif;
        font-weight: 500;
    }

    .form-control:focus {
        box-shadow: 0 0 0 0.25rem rgba(25, 46, 47, 0.25);
        border-color: #192E2F;
    }

    /* Change Tracking Styling */
    .form-control.changed {
        border-left-width: 4px !important;
        border-left-color: #BD7418 !important;
        background-color: rgba(189, 116, 24, 0.05) !important;
        transition: all 0.3s ease;
    }

    .change-indicator {
        border-left: 4px solid #0dcaf0;
    }

    /* Section Styling */
    .section-title {
        color: #495057;
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 8px;
        font-size: 1.1rem;
    }

    .form-section {
        padding: 1rem;
        border-radius: 12px;
        background: rgba(248, 249, 250, 0.5);
        border-left: 4px solid transparent;
        transition: all 0.3s ease;
    }

    .form-section:hover {
        background: rgba(248, 249, 250, 0.8);
        border-left-color: #192E2F;
    }

    /* Enhanced button styling */
    .btn {
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .btn:hover {
        transform: translateY(-2px);
    }

    .btn-success {
        background: linear-gradient(135deg, #198754, #157347);
        border-width: 2px;
    }

    .btn-outline-secondary:hover {
        background: #6c757d;
        border-color: #6c757d;
        color: white;
    }

    /* Badge styling */
    .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .display-6 {
            font-size: 1.5rem !important;
        }
        
        .card-body {
            padding: 1.5rem !important;
        }
        
        .form-section {
            padding: 0.75rem;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            font-size: 1rem;
        }
    }

    @@media (max-width: 576px) {
        .display-6 {
            font-size: 1.25rem !important;
        }
        
        .form-section {
            padding: 0.5rem;
        }
        
        .section-title {
            font-size: 0.95rem;
        }
    }

    /* Loading state styling */
    .btn:disabled {
        opacity: 0.8;
        cursor: not-allowed;
    }

    /* Custom validation styling */
    .was-validated .form-control:valid {
        border-color: #198754;
        background-image: none;
    }

    .was-validated .form-control:invalid {
        border-color: #dc3545;
        background-image: none;
    }

    /* Card enhancements */
    .card {
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-2px);
    }

    /* Form field enhancements */
    .form-floating {
        position: relative;
    }

    .form-floating:hover {
        z-index: 2;
    }

    /* Animation keyframes */
    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Notification styling */
    .alert {
        border-width: 0;
        border-radius: 12px !important;
    }

    /* Print styles */
    @@media print {
        .btn, .card-footer, .change-indicator {
            display: none !important;
        }
        
        .card {
            border: 1px solid #dee2e6 !important;
            box-shadow: none !important;
        }
    }
</style>
