@model Bulky.Models.ViewModels.ShoppingCartViewModel

@{
    ViewData["Title"] = "Order Summary - BulkyWeb";
}

<!-- Order Summary Hero Section -->
<section class="summary-hero py-4 py-md-5" style="background: linear-gradient(135deg, #2C3E50 0%, #34495E 50%, #4A6741 100%); position: relative; overflow: hidden;">
    <!-- Decorative Background -->
    <div class="position-absolute w-100 h-100" style="top: 0; left: 0; opacity: 0.1; background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><text y=\"30\" font-size=\"25\" fill=\"%23ffffff\">📋</text><text x=\"60\" y=\"70\" font-size=\"20\" fill=\"%23ffffff\">💳</text></svg>'); background-size: 120px 120px;"></div>
    
    <div class="container position-relative">
        <div class="row align-items-center">
            <div class="col-12">
                <!-- Breadcrumb Navigation -->
                <nav aria-label="breadcrumb" class="mb-4">
                    <ol class="breadcrumb bg-white bg-opacity-10 p-3 rounded-3 border-0">
                        <li class="breadcrumb-item">
                            <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="text-decoration-none text-white">
                                <i class="bi bi-house-door me-1"></i>Home
                            </a>
                        </li>
                        <li class="breadcrumb-item">
                            <a asp-area="Customer" asp-controller="Cart" asp-action="Index" class="text-decoration-none text-white">
                                <i class="bi bi-cart me-1"></i>Cart
                            </a>
                        </li>
                        <li class="breadcrumb-item active text-warning fw-medium" aria-current="page">
                            <i class="bi bi-clipboard-check me-1"></i>Order Summary
                        </li>
                    </ol>
                </nav>

                <!-- Page Header -->
                <div class="text-center mb-4">
                    <h1 class="display-5 fw-bold text-white mb-3" style="font-family: 'Georgia', serif;">
                        <i class="bi bi-clipboard-check me-3 text-warning"></i>Order Summary
                    </h1>
                    <p class="lead text-white opacity-75">Review your order details and complete your purchase</p>
                    <div class="decorative-line mx-auto" style="width: 100px; height: 3px; background: linear-gradient(to right, #F39C12, #E67E22); border-radius: 3px;"></div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Main Order Summary Section -->
<section class="summary-main py-4 py-md-5">
    <div class="container">
        <form asp-action="Summary" method="post" id="summaryForm" class="needs-validation" novalidate>
            <div class="row g-4 g-lg-5">
                <!-- Order Items & Customer Info -->
                <div class="col-12 col-xl-8">
                    <!-- Customer Information -->
                    <div class="customer-info-section mb-5">
                        <div class="card border-0 shadow-lg" style="border-radius: 15px;">
                            <div class="card-header text-white py-4" 
                                 style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #4A6741, #578553);">
                                <h5 class="mb-0 fw-bold">
                                    <i class="bi bi-person-circle me-2"></i>Customer Information
                                </h5>
                            </div>
                            <div class="card-body p-4">
                                <div class="row g-4">
                                    <div class="col-md-6">
                                        <div class="info-group">
                                            <label asp-for="OrderHeader.Name" class="text-muted small fw-medium">Full Name</label>
                                            <input asp-for="OrderHeader.Name" class="form-control fw-bold text-primary" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="info-group">
                                            <label asp-for="OrderHeader.PhoneNumber" class="text-muted small fw-medium">Phone Number</label>
                                            <input asp-for="OrderHeader.PhoneNumber" class="form-control fw-bold text-primary" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="info-group">
                                            <label class="text-muted small fw-medium">Shipping Address</label>
                                            <div class="address-container">
                                                <input asp-for="OrderHeader.StreetAddress" class="form-control fw-bold text-primary mb-2" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                                <div class="d-flex gap-2">
                                                    <input asp-for="OrderHeader.City" class="form-control fw-bold text-primary" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                                    <input asp-for="OrderHeader.State" class="form-control fw-bold text-primary" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                                    <input asp-for="OrderHeader.PostalCode" class="form-control fw-bold text-primary" style="border: none; background: transparent; font-size: 1rem;" readonly />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="order-items-section">
                        <div class="card border-0 shadow-lg" style="border-radius: 15px;">
                            <div class="card-header text-white py-4" 
                                 style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #8B4513, #A0522D);">
                                <h5 class="mb-0 fw-bold">
                                    <i class="bi bi-bag-check me-2"></i>Order Items (@Model.ShoppingCartList.Count())
                                </h5>
                            </div>
                            <div class="card-body p-0">
                                <!-- Items Header (Desktop) -->
                                <div class="items-header d-none d-md-block bg-light p-3 border-bottom">
                                    <div class="row fw-bold text-muted">
                                        <div class="col-6">Product</div>
                                        <div class="col-2 text-center">Price</div>
                                        <div class="col-2 text-center">Quantity</div>
                                        <div class="col-2 text-center">Subtotal</div>
                                    </div>
                                </div>

                                <!-- Items List -->
                                <div class="items-list">
                                    @foreach (var item in Model.ShoppingCartList)
                                    {
                                        decimal itemPrice = 0;
                                        // Calculate price based on quantity (bulk pricing)
                                        if (item.Count >= 100)
                                        {
                                            itemPrice = (decimal)item.Product.Price100;
                                        }
                                        else if (item.Count >= 50)
                                        {
                                            itemPrice = (decimal)item.Product.Price50;
                                        }
                                        else
                                        {
                                            itemPrice = (decimal)item.Product.Price;
                                        }
                                        
                                        decimal itemTotal = itemPrice * item.Count;

                                        <div class="order-item p-3 p-md-4 border-bottom" data-item-id="@item.Id">
                                            <div class="row align-items-center g-3">
                                                <!-- Product Info -->
                                                <div class="col-12 col-md-6">
                                                    <div class="d-flex align-items-center">
                                                        <!-- Product Image -->
                                                        <div class="product-image me-3 flex-shrink-0">
                                                            @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                                            {
                                                                <img src="@item.Product.ImageUrl" alt="@item.Product.Title" 
                                                                     class="img-fluid rounded-3 shadow-sm" 
                                                                     style="width: 70px; height: 90px; object-fit: cover;" />
                                                            }
                                                            else
                                                            {
                                                                <div class="book-placeholder d-flex align-items-center justify-content-center rounded-3 shadow-sm" 
                                                                     style="width: 70px; height: 90px; background: linear-gradient(145deg, #8B4513, #A0522D);">
                                                                    <i class="bi bi-book text-white fs-5"></i>
                                                                </div>
                                                            }
                                                        </div>
                                                        
                                                        <!-- Product Details -->
                                                        <div class="product-details flex-grow-1">
                                                            <h6 class="product-title fw-bold mb-2 text-primary" style="font-family: 'Georgia', serif;">
                                                                @item.Product.Title
                                                            </h6>
                                                            <p class="product-author text-muted mb-2 small">
                                                                <i class="bi bi-pen me-1"></i>by @item.Product.Author
                                                            </p>
                                                            @if (item.Product.Category != null)
                                                            {
                                                                <span class="badge bg-secondary bg-gradient small">
                                                                    <i class="bi bi-collection me-1"></i>@item.Product.Category.Name
                                                                </span>
                                                            }
                                                            
                                                            <!-- Mobile Display -->
                                                            <div class="d-md-none mt-3">
                                                                <div class="row g-2">
                                                                    <div class="col-4">
                                                                        <small class="text-muted">Price:</small>
                                                                        <div class="fw-bold text-success">@itemPrice.ToString("C")</div>
                                                                    </div>
                                                                    <div class="col-4">
                                                                        <small class="text-muted">Qty:</small>
                                                                        <div class="fw-bold text-primary">@item.Count</div>
                                                                    </div>
                                                                    <div class="col-4">
                                                                        <small class="text-muted">Total:</small>
                                                                        <div class="fw-bold text-warning">@itemTotal.ToString("C")</div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- Desktop Price Display -->
                                                <div class="col-md-2 text-center d-none d-md-block">
                                                    <div class="fw-bold text-success fs-6">@itemPrice.ToString("C")</div>
                                                    @if (item.Count >= 50)
                                                    {
                                                        <small class="text-warning">
                                                            <i class="bi bi-star-fill me-1"></i>Bulk Price
                                                        </small>
                                                    }
                                                </div>

                                                <!-- Desktop Quantity -->
                                                <div class="col-md-2 text-center d-none d-md-block">
                                                    <span class="fw-bold text-primary fs-5">@item.Count</span>
                                                </div>

                                                <!-- Desktop Subtotal -->
                                                <div class="col-md-2 text-center d-none d-md-block">
                                                    <div class="fw-bold text-warning fs-5">@itemTotal.ToString("C")</div>
                                                    @if (item.Count >= 50)
                                                    {
                                                        decimal regularTotal = (decimal)item.Product.Price * item.Count;
                                                        decimal savings = regularTotal - itemTotal;
                                                        if (savings > 0)
                                                        {
                                                            <small class="text-success">
                                                                <i class="bi bi-piggy-bank me-1"></i>Save @savings.ToString("C")
                                                            </small>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Total & Checkout -->
                <div class="col-12 col-xl-4">
                    <div class="checkout-section position-sticky" style="top: 20px;">
                        <!-- Order Total Card -->
                        <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                            <div class="card-header text-white py-4" 
                                 style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #27AE60, #2ECC71);">
                                <h5 class="mb-0 fw-bold">
                                    <i class="bi bi-calculator me-2"></i>Order Total
                                </h5>
                            </div>
                            <div class="card-body p-4">
                                <!-- Order Summary Details -->
                                <div class="order-summary">
                                    <div class="d-flex justify-content-between mb-3">
                                        <span class="text-muted">Items (@Model.ShoppingCartList.Count()):</span>
                                        <span class="fw-medium">@Model.ShoppingCartList.Sum(x => x.Count) books</span>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between mb-3">
                                        <span class="text-muted">Subtotal:</span>
                                        <span class="fw-medium">@Model.OrderHeader.OrderTotal.ToString("C")</span>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between mb-3">
                                        <span class="text-muted">Shipping:</span>
                                        <span class="text-success fw-medium">
                                            <i class="bi bi-truck me-1"></i>FREE
                                        </span>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between mb-3">
                                        <span class="text-muted">Tax:</span>
                                        <span class="fw-medium">$0.00</span>
                                    </div>
                                    
                                    <!-- Bulk Savings Display -->
                                    @{
                                        decimal totalRegularPrice = 0;
                                        foreach (var item in Model.ShoppingCartList)
                                        {
                                            totalRegularPrice += (decimal)item.Product.Price * item.Count;
                                        }
                                        decimal totalSavings = totalRegularPrice - (decimal)Model.OrderHeader.OrderTotal;
                                    }
                                    
                                    @if (totalSavings > 0)
                                    {
                                        <div class="d-flex justify-content-between mb-3">
                                            <span class="text-success">
                                                <i class="bi bi-piggy-bank me-1"></i>You Saved:
                                            </span>
                                            <span class="fw-bold text-success">@totalSavings.ToString("C")</span>
                                        </div>
                                    }
                                    
                                    <hr class="my-4">
                                    
                                    <div class="d-flex justify-content-between mb-4">
                                        <span class="h5 fw-bold">Grand Total:</span>
                                        <span class="h4 fw-bold text-primary">@Model.OrderHeader.OrderTotal.ToString("C")</span>
                                    </div>
                                </div>

                                <!-- Checkout Actions -->
                                <div class="checkout-actions d-grid gap-3">
                                    <button type="submit" class="btn btn-success btn-lg fw-bold shadow-lg" id="placeOrderBtn"
                                            style="border-radius: 12px; background: linear-gradient(135deg, #27AE60, #2ECC71);">
                                        <i class="bi bi-credit-card me-2"></i>Place Order
                                    </button>
                                    
                                    <a asp-area="Customer" asp-controller="Cart" asp-action="Index" 
                                       class="btn btn-outline-primary fw-medium" 
                                       style="border-radius: 12px;">
                                        <i class="bi bi-arrow-left me-2"></i>Back to Cart
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Methods -->
                        <div class="card border-0 shadow-sm mb-4" style="border-radius: 15px;">
                            <div class="card-body p-4">
                                <h6 class="fw-bold mb-3 text-primary">
                                    <i class="bi bi-credit-card-2-front me-2"></i>Accepted Payment Methods
                                </h6>
                                <div class="payment-methods d-flex flex-wrap gap-2">
                                    <span class="badge bg-primary bg-gradient px-3 py-2">
                                        <i class="bi bi-credit-card me-1"></i>Visa
                                    </span>
                                    <span class="badge bg-warning bg-gradient px-3 py-2">
                                        <i class="bi bi-credit-card me-1"></i>Mastercard
                                    </span>
                                    <span class="badge bg-info bg-gradient px-3 py-2">
                                        <i class="bi bi-credit-card me-1"></i>Amex
                                    </span>
                                    <span class="badge bg-success bg-gradient px-3 py-2">
                                        <i class="bi bi-paypal me-1"></i>PayPal
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Security & Guarantee -->
                        <div class="security-guarantee">
                            <div class="card border-0 shadow-sm" 
                                 style="border-radius: 15px; background: linear-gradient(145deg, rgba(52, 152, 219, 0.05), rgba(41, 128, 185, 0.05));">
                                <div class="card-body p-4">
                                    <h6 class="fw-bold mb-3 text-primary">
                                        <i class="bi bi-shield-check me-2"></i>Security & Guarantee
                                    </h6>
                                    <div class="security-items">
                                        <div class="security-item d-flex align-items-center mb-2">
                                            <i class="bi bi-lock-fill text-success me-2"></i>
                                            <small class="text-muted">256-bit SSL Encryption</small>
                                        </div>
                                        <div class="security-item d-flex align-items-center mb-2">
                                            <i class="bi bi-shield-fill-check text-success me-2"></i>
                                            <small class="text-muted">100% Secure Checkout</small>
                                        </div>
                                        <div class="security-item d-flex align-items-center mb-2">
                                            <i class="bi bi-arrow-return-left text-success me-2"></i>
                                            <small class="text-muted">30-Day Money Back</small>
                                        </div>
                                        <div class="security-item d-flex align-items-center">
                                            <i class="bi bi-headset text-success me-2"></i>
                                            <small class="text-muted">24/7 Customer Support</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeSummaryAnimations();
            initializeMobileOptimizations();
            displayOrderStatistics();
            initializeCheckoutValidation();
        });

        function initializeSummaryAnimations() {
            // Animate elements on load
            if ('IntersectionObserver' in window) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                        }
                    });
                }, { threshold: 0.1 });

                const animateElements = document.querySelectorAll('.order-item, .card, .checkout-section');
                animateElements.forEach((element, index) => {
                    element.style.opacity = '0';
                    element.style.transform = 'translateY(30px)';
                    element.style.transition = `all 0.6s ease ${index * 0.1}s`;
                    observer.observe(element);
                });
            }

            // Card hover effects
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.boxShadow = '0 15px 35px rgba(0,0,0,0.15)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                });
            });
        }

        function initializeMobileOptimizations() {
            // Enhanced mobile interactions
            if ('ontouchstart' in window) {
                const interactiveElements = document.querySelectorAll('.btn, .card, .order-item');
                interactiveElements.forEach(element => {
                    element.addEventListener('touchstart', function() {
                        this.style.transform = 'scale(0.98)';
                    });
                    element.addEventListener('touchend', function() {
                        setTimeout(() => {
                            this.style.transform = '';
                        }, 150);
                    });
                });
            }

            // Optimize sticky positioning for mobile
            const checkoutSection = document.querySelector('.checkout-section');
            if (checkoutSection && window.innerWidth <= 1200) {
                checkoutSection.style.position = 'relative';
                checkoutSection.style.top = 'auto';
            }
        }

        function displayOrderStatistics() {
            const orderItems = @Model.ShoppingCartList.Count();
            const totalQuantity = @Model.ShoppingCartList.Sum(x => x.Count);
            const orderTotal = @Model.OrderHeader.OrderTotal;
            
            console.log(`Order Summary Statistics:
                - Items: ${orderItems}
                - Total Quantity: ${totalQuantity}
                - Order Total: $${orderTotal.toFixed(2)}`);
            
            // Show savings notification if applicable
            const totalSavings = @{
                decimal scriptTotalRegularPrice = 0;
                foreach (var item in Model.ShoppingCartList)
                {
                    scriptTotalRegularPrice += (decimal)item.Product.Price * item.Count;
                }
                decimal scriptTotalSavings = scriptTotalRegularPrice - (decimal)Model.OrderHeader.OrderTotal;
                
                @scriptTotalSavings;
            };
            
            if (totalSavings > 0) {
                showNotification(`Great choice! You're saving $${totalSavings.toFixed(2)} with bulk pricing!`, 'success');
            }
        }

        function initializeCheckoutValidation() {
            const summaryForm = document.getElementById('summaryForm');
            const placeOrderBtn = document.getElementById('placeOrderBtn');
            
            if (summaryForm && placeOrderBtn) {
                summaryForm.addEventListener('submit', function(e) {
                    // Show confirmation modal
                    if (!confirm('Are you ready to place your order?')) {
                        e.preventDefault();
                        return false;
                    }
                    
                    // Show loading state
                    placeOrderBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status"></span>Processing Order...';
                    placeOrderBtn.disabled = true;
                    
                    // The form will submit naturally to the POST action
                    return true;
                });
            }
        }

        // Utility functions
        function showNotification(message, type) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '9999';
            toast.style.minWidth = '350px';
            toast.style.borderRadius = '12px';
            toast.innerHTML = `
                <i class="bi bi-${type === 'success' ? 'check-circle' : 'info-circle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 5000);
        }
    </script>
}

<style>
    /* Order Summary Styling */
    .summary-main {
        min-height: 70vh;
    }

    .customer-info-section .info-group {
        padding: 0.75rem;
        background: linear-gradient(145deg, rgba(75, 113, 71, 0.05), rgba(87, 133, 83, 0.05));
        border-radius: 10px;
        border-left: 4px solid #4A6741;
    }

    .order-item {
        transition: all 0.3s ease;
    }

    .order-item:hover {
        background-color: rgba(75, 113, 71, 0.02);
    }

    .product-title {
        font-family: 'Georgia', serif;
        line-height: 1.3;
    }

    /* Checkout Section */
    .checkout-section {
        z-index: 100;
    }

    .order-summary {
        font-size: 0.95rem;
    }

    .payment-methods .badge {
        font-size: 0.8rem;
        border-radius: 8px;
    }

    .security-item {
        transition: all 0.2s ease;
    }

    .security-item:hover {
        transform: translateX(3px);
    }

    /* Card Enhancements */
    .card {
        transition: all 0.3s ease;
        border: none !important;
    }

    .card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.1) !important;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .display-5 {
            font-size: 1.8rem !important;
        }
        
        .checkout-section {
            position: relative !important;
            top: auto !important;
        }
        
        .product-image img,
        .book-placeholder {
            width: 50px !important;
            height: 65px !important;
        }
        
        .order-summary {
            font-size: 0.9rem;
        }
    }

    @@media (max-width: 576px) {
        .display-5 {
            font-size: 1.5rem !important;
        }
        
        .card-body {
            padding: 1rem !important;
        }
        
        .info-group {
            padding: 0.5rem !important;
        }
    }

    /* Animation Keyframes */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    /* Print Styles */
    @@media print {
        .checkout-actions,
        .payment-methods,
        .security-guarantee {
            display: none !important;
        }
        
        .card {
            border: 1px solid #dee2e6 !important;
            box-shadow: none !important;
        }
        
        .summary-hero {
            background: none !important;
            color: black !important;
        }
    }

    /* Loading States */
    .btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }

    /* Custom Scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb {
        background: linear-gradient(to bottom, #4A6741, #578553);
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(to bottom, #3a5a39, #4a6b4a);
    }
</style>
