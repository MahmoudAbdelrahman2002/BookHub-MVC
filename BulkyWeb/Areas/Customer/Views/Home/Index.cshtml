@model IEnumerable<Bulky.Models.Models.Product>

@{
    ViewData["Title"] = "Home - BulkyWeb Bookstore";
}

<!-- Literary Hero Section -->
<section class="literary-hero bg-primary bg-gradient text-white py-5 mb-5" style="background: linear-gradient(135deg, #0d6efd 0%, #0a58ca 30%, #084298 70%, #052c65 100%) !important; position: relative; overflow: hidden;">
    <!-- Background Pattern -->
    <div class="position-absolute w-100 h-100" style="top: 0; left: 0; opacity: 0.1; background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><text y=\"50\" font-size=\"20\" fill=\"white\">📚</text><text x=\"50\" y=\"80\" font-size=\"15\" fill=\"white\">📖</text><text x=\"80\" y=\"30\" font-size=\"18\" fill=\"white\">✒️</text></svg>'); background-size: 150px 150px;"></div>
    
    <div class="container position-relative">
        <div class="row align-items-center min-vh-50">
            <div class="col-lg-8 mx-auto text-center">
                <div class="hero-content">
                    <!-- Main Title with Literary Quote -->
                    <div class="mb-4">
                        <i class="bi bi-quote display-4 opacity-50 mb-3"></i>
                        <h1 class="display-3 fw-bold mb-3" style="font-family: 'Georgia', serif;">
                            <span class="text-warning">BulkyWeb</span>
                            <span class="fw-light">Bookstore</span>
                        </h1>
                        <blockquote class="blockquote mb-4">
                            <p class="lead mb-3 opacity-90" style="font-style: italic;">
                                "A room without books is like a body without a soul"
                            </p>
                            <footer class="blockquote-footer text-warning">
                                <cite title="Source Title">Marcus Tullius Cicero</cite>
                            </footer>
                        </blockquote>
                    </div>
                    
                    <!-- Subtitle -->
                    <p class="lead mb-4 opacity-85" style="max-width: 600px; margin: 0 auto;">
                        Discover literary treasures from timeless classics to contemporary masterpieces. 
                        Your next great read awaits in our carefully curated collection.
                    </p>
                    
                    <!-- CTA Buttons -->
                    <div class="d-flex flex-wrap gap-3 justify-content-center">
                        <a href="#featured-books" class="btn btn-warning btn-lg shadow-lg fw-medium px-4 py-3">
                            <i class="bi bi-book-half me-2"></i>Explore Collection
                        </a>
                        <a href="#categories" class="btn btn-outline-light btn-lg fw-medium px-4 py-3">
                            <i class="bi bi-collection me-2"></i>Browse Genres
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Floating Books Animation -->
        <div class="floating-books position-absolute d-none d-lg-block" style="top: 20%; right: 10%;">
            <i class="bi bi-book text-warning opacity-25" style="font-size: 3rem; animation: float 6s ease-in-out infinite;"></i>
        </div>
        <div class="floating-books position-absolute d-none d-lg-block" style="bottom: 20%; left: 15%;">
            <i class="bi bi-journal-bookmark text-info opacity-25" style="font-size: 2.5rem; animation: float 4s ease-in-out infinite reverse;"></i>
        </div>
    </div>
</section>

<!-- Library Stats Section -->
<section class="library-stats mb-5">
    <div class="container">
        <div class="text-center mb-4">
            <h2 class="h4 text-muted mb-2">📚 Our Literary Collection</h2>
            <div class="decorative-line mx-auto" style="width: 80px; height: 2px; background: linear-gradient(to right, #ffc107, #0d6efd); border-radius: 2px;"></div>
        </div>
        
        <div class="row g-3 g-md-4">
            <div class="col-6 col-lg-3">
                <div class="stat-card card border-0 shadow-sm h-100 text-center book-themed-card" style="border-left: 4px solid #0d6efd !important; transition: all 0.3s ease;">
                    <div class="card-body py-4">
                        <div class="stat-icon bg-gradient rounded-circle p-3 d-inline-flex mb-3" style="background: linear-gradient(135deg, #0d6efd, #0a58ca) !important;">
                            <i class="bi bi-books text-white fs-4"></i>
                        </div>
                        <h3 class="fw-bold mb-1" style="color: #0d6efd;">@Model.Count()</h3>
                        <p class="text-muted small mb-0">Books in Library</p>
                        <small class="text-success">📖 Available Now</small>
                    </div>
                </div>
            </div>
            
            <div class="col-6 col-lg-3">
                <div class="stat-card card border-0 shadow-sm h-100 text-center book-themed-card" style="border-left: 4px solid #198754 !important; transition: all 0.3s ease;">
                    <div class="card-body py-4">
                        <div class="stat-icon bg-gradient rounded-circle p-3 d-inline-flex mb-3" style="background: linear-gradient(135deg, #198754, #146c43) !important;">
                            <i class="bi bi-bookmark-star text-white fs-4"></i>
                        </div>
                        <h3 class="fw-bold mb-1" style="color: #198754;">@Model.Where(p => p.Category != null).Select(p => p.Category.Name).Distinct().Count()</h3>
                        <p class="text-muted small mb-0">Literary Genres</p>
                        <small class="text-primary">🎭 Diverse Selection</small>
                    </div>
                </div>
            </div>
            
            <div class="col-6 col-lg-3">
                <div class="stat-card card border-0 shadow-sm h-100 text-center book-themed-card" style="border-left: 4px solid #ffc107 !important; transition: all 0.3s ease;">
                    <div class="card-body py-4">
                        <div class="stat-icon bg-gradient rounded-circle p-3 d-inline-flex mb-3" style="background: linear-gradient(135deg, #ffc107, #ffca2c) !important;">
                            <i class="bi bi-coin text-white fs-4"></i>
                        </div>
                        <h3 class="fw-bold mb-1" style="color: #ffc107;">@(Model.Any() ? Model.Min(p => p.Price).ToString("C") : "$0.00")</h3>
                        <p class="text-muted small mb-0">Starting Price</p>
                        <small class="text-warning">💰 Affordable Reads</small>
                    </div>
                </div>
            </div>
            
            <div class="col-6 col-lg-3">
                <div class="stat-card card border-0 shadow-sm h-100 text-center book-themed-card" style="border-left: 4px solid #198754 !important; transition: all 0.3s ease;">
                    <div class="card-body py-4">
                        <div class="stat-icon bg-gradient rounded-circle p-3 d-inline-flex mb-3" style="background: linear-gradient(135deg, #198754, #146c43) !important;">
                            <i class="bi bi-truck text-white fs-4"></i>
                        </div>
                        <h3 class="fw-bold mb-1" style="color: #198754;">Free</h3>
                        <p class="text-muted small mb-0">Shipping</p>
                        <small class="text-success">🚚 Fast Delivery</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Literary Genres Section -->
<section id="categories" class="literary-genres mb-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="display-6 fw-bold mb-3" style="color: #0d6efd; font-family: 'Georgia', serif;">
                <i class="bi bi-compass me-2 text-warning"></i>Explore Literary Worlds
            </h2>
            <p class="lead text-muted mb-4">Journey through different realms of literature and discover your next favorite genre</p>
            <div class="decorative-line mx-auto mb-4" style="width: 100px; height: 3px; background: linear-gradient(to right, #ffc107, #0d6efd, #198754); border-radius: 3px;"></div>
        </div>
        
        <div class="row g-3 g-md-4">
            @{
                var genreIcons = new Dictionary<string, string>
                {
                    {"Fiction", "bi-magic"},
                    {"Mystery", "bi-search"},
                    {"Romance", "bi-heart"},
                    {"Science", "bi-atom"},
                    {"History", "bi-clock-history"},
                    {"Biography", "bi-person-badge"},
                    {"Fantasy", "bi-stars"},
                    {"Thriller", "bi-lightning-charge"}
                };
            }
            
            @foreach (var category in Model.Where(p => p.Category != null).GroupBy(p => p.Category.Name).OrderBy(g => g.Key))
            {
                var iconClass = genreIcons.ContainsKey(category.Key) ? genreIcons[category.Key] : "bi-book";
                
                <div class="col-6 col-md-4 col-xl-3">
                    <div class="genre-card card border-0 shadow-sm h-100" style="transition: all 0.4s ease; cursor: pointer; background: linear-gradient(145deg, #ffffff, #f8f9fa);">
                        <div class="card-body text-center py-4 position-relative">
                            <!-- Genre Icon -->
                            <div class="genre-icon-container mb-3">
                                <div class="genre-icon bg-gradient rounded-circle p-3 d-inline-flex position-relative" style="background: linear-gradient(135deg, #0d6efd, #0a58ca) !important;">
                                    <i class="@iconClass text-white fs-5"></i>
                                    <div class="icon-shine position-absolute top-0 start-0 w-100 h-100 rounded-circle" style="background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.3) 50%, transparent 70%); opacity: 0; transition: opacity 0.3s ease;"></div>
                                </div>
                            </div>
                            
                            <!-- Genre Info -->
                            <h5 class="card-title fw-bold mb-2" style="color: #0d6efd; font-family: 'Georgia', serif;">@category.Key</h5>
                            <p class="text-muted small mb-3">
                                @category.Count() book@(category.Count() > 1 ? "s" : "") available
                            </p>
                            
                            <!-- Action Button -->
                            <button class="btn btn-outline-primary btn-sm genre-btn fw-medium" onclick="filterByCategory('@category.Key')" style="border-radius: 20px; transition: all 0.3s ease;">
                                <i class="bi bi-arrow-right me-1"></i>Discover Books
                            </button>
                            
                            <!-- Decorative Element -->
                            <div class="position-absolute" style="bottom: 10px; right: 15px; opacity: 0.1;">
                                <i class="@iconClass" style="font-size: 2rem; color: #0d6efd;"></i>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Featured Books Section -->
<section id="featured-books" class="featured-books mb-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="display-6 fw-bold mb-3" style="color: #0d6efd; font-family: 'Georgia', serif;">
                <i class="bi bi-star-fill me-2 text-warning"></i>Featured in Our Library
            </h2>
            <p class="lead text-muted">Carefully selected titles from our extensive collection</p>
        </div>

        <!-- Enhanced Search -->
        <div class="row mb-5">
            <div class="col-12 col-lg-8 mx-auto">
                <div class="search-container card border-0 shadow-lg" style="border-radius: 25px; overflow: hidden;">
                    <div class="card-body p-0">
                        <div class="input-group" style="border: none;">
                            <span class="input-group-text border-0 ps-4" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
                                <i class="bi bi-search text-primary fs-5"></i>
                            </span>
                            <input type="text" id="searchInput" class="form-control border-0 py-3 px-3" 
                                   placeholder="Search for books, authors, genres, or ISBN..."
                                   style="background: linear-gradient(135deg, #f8f9fa, #e9ecef); font-size: 1.1rem;">
                            <button class="btn border-0 pe-4" type="button" onclick="clearSearch()" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
                                <i class="bi bi-x-circle text-muted fs-5"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Books Grid -->
        <div class="row g-3 g-md-4" id="booksGrid">
            @foreach (var product in Model)
            {
                <div class="col-6 col-md-4 col-xl-3 book-item" data-category="@(product.Category?.Name ?? "")" data-title="@product.Title" data-author="@product.Author" data-description="@(product.Description ?? "")">
                    <div class="book-card card border-0 shadow-sm h-100" style="transition: all 0.4s ease; border-radius: 15px; overflow: hidden;">
                        <!-- Book Cover -->
                        <div class="book-cover position-relative overflow-hidden" style="height: 280px; background: linear-gradient(145deg, #f8f9fa, #e9ecef);">
                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl" alt="@product.Title" 
                                     class="card-img-top w-100 h-100" 
                                     style="object-fit: cover; transition: transform 0.4s ease;" />
                            }
                            else
                            {
                                <div class="w-100 h-100 d-flex align-items-center justify-content-center" style="background: linear-gradient(145deg, #0d6efd, #0a58ca);">
                                    <div class="text-center text-white">
                                        <i class="bi bi-book display-4 mb-2"></i>
                                        <p class="small fw-medium">@product.Title.Substring(0, Math.Min(20, product.Title.Length))@(product.Title.Length > 20 ? "..." : "")</p>
                                    </div>
                                </div>
                            }
                            
                            <!-- Overlay Badges -->
                            @if (product.Category != null)
                            {
                                <div class="position-absolute top-0 start-0 m-2">
                                    <span class="badge text-white px-2 py-1" style="background: rgba(13, 110, 253, 0.9); border-radius: 12px; font-size: 0.7rem;">
                                        @product.Category.Name
                                    </span>
                                </div>
                            }

                            <!-- Price Badge -->
                            <div class="position-absolute top-0 end-0 m-2">
                                <span class="badge text-white px-2 py-1" style="background: rgba(255, 193, 7, 0.9); border-radius: 12px; font-weight: 600;">
                                    @product.Price.ToString("C")
                                </span>
                            </div>
                            
                            <!-- Reading Icon Overlay -->
                            <div class="book-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center" style="background: rgba(13, 110, 253, 0.8); opacity: 0; transition: opacity 0.3s ease;">
                                <i class="bi bi-book-half text-white" style="font-size: 3rem;"></i>
                            </div>
                        </div>

                        <!-- Book Details -->
                        <div class="card-body p-3 d-flex flex-column" style="background: #fff;">
                            <h6 class="book-title fw-bold mb-2" style="color: #0d6efd; font-size: 0.95rem; line-height: 1.3; min-height: 2.6rem; font-family: 'Georgia', serif;">
                                @(product.Title.Length > 45 ? product.Title.Substring(0, 45) + "..." : product.Title)
                            </h6>
                            
                            <p class="book-author text-muted small mb-2" style="font-style: italic;">
                                <i class="bi bi-pen me-1"></i>by @product.Author
                            </p>
                            
                            @if (!string.IsNullOrEmpty(product.Description))
                            {
                                <p class="book-description text-muted small mb-3" style="font-size: 0.8rem; line-height: 1.4;">
                                    @(product.Description.Length > 70 ? product.Description.Substring(0, 70) + "..." : product.Description)
                                </p>
                            }

                            <!-- Pricing Section -->
                            <div class="pricing-section mb-3 mt-auto">
                                @if (product.ListPrice > product.Price)
                                {
                                    <div class="d-flex align-items-center gap-2 mb-1">
                                        <span class="text-muted small text-decoration-line-through">@product.ListPrice.ToString("C")</span>
                                        <span class="text-success fw-bold">@product.Price.ToString("C")</span>
                                        <span class="badge bg-danger text-white" style="font-size: 0.6rem;">SALE</span>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-success fw-bold fs-6">@product.Price.ToString("C")</span>
                                }
                                
                                <!-- Bulk Pricing -->
                                <div class="bulk-pricing">
                                    <small class="text-muted" style="font-size: 0.7rem;">
                                        Bulk: 50+ @product.Price50.ToString("C") • 100+ @product.Price100.ToString("C")
                                    </small>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="book-actions d-grid gap-2">
                                <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-primary btn-sm fw-medium" style="border-radius: 20px; background: linear-gradient(135deg, #0d6efd, #0a58ca); border: none; text-decoration: none; color: white;">
                                    <i class="bi bi-eye me-1"></i>View Details
                                </a>
                                <button class="btn btn-outline-warning btn-sm fw-medium" onclick="addToLibrary(@product.Id)" style="border-radius: 20px;">
                                    <i class="bi bi-bookmark-plus me-1"></i>Add to Library
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- No Results -->
        <div id="noResults" class="text-center py-5 d-none">
            <div class="mb-4">
                <i class="bi bi-book-half display-1 text-muted opacity-50"></i>
            </div>
            <h5 class="text-muted fw-medium mb-2">No books found in our library</h5>
            <p class="text-muted">Try adjusting your search or explore our different genres</p>
            <button class="btn btn-primary" onclick="clearSearch()" style="border-radius: 20px;">
                <i class="bi bi-arrow-clockwise me-1"></i>Browse All Books
            </button>
        </div>
    </div>
</section>

<!-- Literary Quote CTA -->
<section class="literary-cta py-5" style="background: linear-gradient(135deg, #0d6efd, #0a58ca); position: relative; overflow: hidden;">
    <!-- Background Pattern -->
    <div class="position-absolute w-100 h-100" style="top: 0; left: 0; opacity: 0.1; background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><text y=\"30\" font-size=\"40\" fill=\"white\">📜</text><text x=\"70\" y=\"70\" font-size=\"30\" fill=\"white\">✍️</text></svg>'); background-size: 200px 200px;"></div>
    
    <div class="container text-center position-relative">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <i class="bi bi-quote display-4 text-warning mb-4"></i>
                <h3 class="fw-bold text-white mb-3" style="font-family: 'Georgia', serif;">
                    Begin Your Literary Journey Today
                </h3>
                <blockquote class="blockquote mb-4">
                    <p class="lead text-white-50 mb-3" style="font-style: italic;">
                        "The more that you read, the more things you will know. The more that you learn, the more places you'll go."
                    </p>
                    <footer class="blockquote-footer text-warning">
                        <cite title="Source Title">Dr. Seuss</cite>
                    </footer>
                </blockquote>
                
                <div class="d-flex flex-wrap gap-3 justify-content-center">
                    <a href="#featured-books" class="btn btn-warning btn-lg shadow-lg fw-medium px-4" style="border-radius: 25px;">
                        <i class="bi bi-book-half me-2"></i>Start Reading
                    </a>
                    <a href="#" class="btn btn-outline-light btn-lg fw-medium px-4" style="border-radius: 25px;">
                        <i class="bi bi-envelope-heart me-2"></i>Join Book Club
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            initializeLiteraryTheme();
            initializeBookAnimations();
            initializeSearch();
            initializeGenreCards();
            initializeBookCards();
        });

        function initializeLiteraryTheme() {
            // Add floating animation keyframes
            const style = document.createElement('style');
            style.textContent = `
                @@keyframes float {
                    0%, 100% { transform: translateY(0px); }
                    50% { transform: translateY(-20px); }
                }
                .floating-books {
                    animation: float 6s ease-in-out infinite;
                }
            `;
            document.head.appendChild(style);
        }

        function initializeBookAnimations() {
            // Entrance animations with staggered timing
            if ('IntersectionObserver' in window) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0) scale(1)';
                        }
                    });
                }, { threshold: 0.1 });

                const bookCards = document.querySelectorAll('.book-card');
                bookCards.forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(50px) scale(0.9)';
                    card.style.transition = `all 0.8s ease ${index * 0.1}s`;
                    observer.observe(card);
                });

                // Animate stats cards
                const statCards = document.querySelectorAll('.stat-card');
                statCards.forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(30px)';
                    card.style.transition = `all 0.6s ease ${index * 0.2}s`;
                    observer.observe(card);
                });
            }
        }

        function initializeSearch() {
            const searchInput = document.getElementById('searchInput');
            
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const filter = this.value.toLowerCase();
                    filterBooks(filter);
                });

                // Enhanced search styling
                searchInput.addEventListener('focus', function() {
                    this.parentElement.parentElement.parentElement.style.boxShadow = '0 15px 35px rgba(13, 110, 253, 0.3)';
                    this.parentElement.parentElement.parentElement.style.transform = 'translateY(-2px)';
                });

                searchInput.addEventListener('blur', function() {
                    this.parentElement.parentElement.parentElement.style.boxShadow = '';
                    this.parentElement.parentElement.parentElement.style.transform = '';
                });
            }
        }

        function initializeGenreCards() {
            const genreCards = document.querySelectorAll('.genre-card');
            
            genreCards.forEach(function(card) {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-10px) scale(1.02)';
                    this.style.boxShadow = '0 20px 40px rgba(13, 110, 253, 0.2)';
                    
                    const iconShine = this.querySelector('.icon-shine');
                    if (iconShine) {
                        iconShine.style.opacity = '1';
                    }
                    
                    const genreBtn = this.querySelector('.genre-btn');
                    if (genreBtn) {
                        genreBtn.style.backgroundColor = '#0d6efd';
                        genreBtn.style.borderColor = '#0d6efd';
                        genreBtn.style.color = 'white';
                        genreBtn.style.transform = 'scale(1.05)';
                    }
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                    
                    const iconShine = this.querySelector('.icon-shine');
                    if (iconShine) {
                        iconShine.style.opacity = '0';
                    }
                    
                    const genreBtn = this.querySelector('.genre-btn');
                    if (genreBtn) {
                        genreBtn.style.backgroundColor = '';
                        genreBtn.style.borderColor = '';
                        genreBtn.style.color = '';
                        genreBtn.style.transform = '';
                    }
                });
            });
        }

        function initializeBookCards() {
            const bookCards = document.querySelectorAll('.book-card');
            
            bookCards.forEach(function(card) {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-15px) scale(1.03)';
                    this.style.boxShadow = '0 25px 50px rgba(13, 110, 253, 0.2)';
                    
                    // Book cover zoom
                    const img = this.querySelector('.book-cover img');
                    if (img) {
                        img.style.transform = 'scale(1.1)';
                    }
                    
                    // Show overlay
                    const overlay = this.querySelector('.book-overlay');
                    if (overlay) {
                        overlay.style.opacity = '0.9';
                    }
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                    
                    // Reset book cover
                    const img = this.querySelector('.book-cover img');
                    if (img) {
                        img.style.transform = '';
                    }
                    
                    // Hide overlay
                    const overlay = this.querySelector('.book-overlay');
                    if (overlay) {
                        overlay.style.opacity = '0';
                    }
                });
            });
        }

        function filterBooks(searchTerm) {
            const bookItems = document.querySelectorAll('.book-item');
            const noResults = document.getElementById('noResults');
            let visibleCount = 0;

            bookItems.forEach(function(item) {
                const title = (item.getAttribute('data-title') || '').toLowerCase();
                const author = (item.getAttribute('data-author') || '').toLowerCase();
                const category = (item.getAttribute('data-category') || '').toLowerCase();
                const description = (item.getAttribute('data-description') || '').toLowerCase();

                const isVisible = title.includes(searchTerm) || 
                                author.includes(searchTerm) || 
                                category.includes(searchTerm) ||
                                description.includes(searchTerm);

                if (isVisible) {
                    item.style.display = '';
                    item.style.opacity = '1';
                    item.style.transform = 'scale(1)';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Show/hide no results
            if (visibleCount === 0 && searchTerm.length > 0) {
                noResults.classList.remove('d-none');
            } else {
                noResults.classList.add('d-none');
            }

            // Add highlight effect to search results
            if (searchTerm.length > 0 && visibleCount > 0) {
                highlightSearchResults(searchTerm);
            } else {
                removeHighlights();
            }
        }

        function highlightSearchResults(searchTerm) {
            const visibleCards = document.querySelectorAll('.book-item[style*="display: "][style*=""]:not([style*="display: none"])');
            visibleCards.forEach(function(card) {
                card.style.border = '2px solid #0d6efd';
                card.style.borderRadius = '15px';
                card.style.transition = 'all 0.3s ease';
            });
        }

        function removeHighlights() {
            const allCards = document.querySelectorAll('.book-item');
            allCards.forEach(function(card) {
                card.style.border = '';
                card.style.borderRadius = '';
            });
        }

        function filterByCategory(categoryName) {
            const searchInput = document.getElementById('searchInput');
            searchInput.value = categoryName;
            filterBooks(categoryName.toLowerCase());
            
            // Add visual feedback for category filtering
            showCategoryFilter(categoryName);
            
            // Smooth scroll to books
            document.getElementById('featured-books').scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start' 
            });
        }

        function showCategoryFilter(categoryName) {
            // Remove existing filter indicators
            const existingIndicators = document.querySelectorAll('.category-filter-indicator');
            existingIndicators.forEach(el => el.remove());
            
            // Add category filter indicator
            const booksSection = document.getElementById('featured-books');
            const indicator = document.createElement('div');
            indicator.className = 'category-filter-indicator alert alert-info mx-auto mb-4';
            indicator.style.maxWidth = '600px';
            indicator.style.borderRadius = '15px';
            indicator.innerHTML = `
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <i class="bi bi-funnel me-2"></i>
                        <strong>Filtering by genre:</strong> ${categoryName}
                    </div>
                    <button class="btn btn-sm btn-outline-primary" onclick="clearSearch()" style="border-radius: 10px;">
                        <i class="bi bi-x-circle me-1"></i>Clear Filter
                    </button>
                </div>
            `;
            
            const searchContainer = booksSection.querySelector('.row.mb-5');
            searchContainer.insertAdjacentElement('afterend', indicator);
        }

        function clearSearch() {
            const searchInput = document.getElementById('searchInput');
            searchInput.value = '';
            filterBooks('');
            
            // Remove category filter indicators
            const existingIndicators = document.querySelectorAll('.category-filter-indicator');
            existingIndicators.forEach(el => el.remove());
            
            // Remove highlights
            removeHighlights();
        }

        function addToLibrary(productId) {
            // Enhanced library functionality
            console.log(`Adding book ${productId} to library`);
            
            // Show success notification
            showNotification(`📚 Book added to your library!`, 'success');
        }

        function showNotification(message, type) {
            // Create and show a toast notification
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '9999';
            toast.style.minWidth = '300px';
            toast.style.borderRadius = '10px';
            toast.innerHTML = `
                <i class="bi bi-check-circle me-2"></i>
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            
            document.body.appendChild(toast);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 3000);
        }

        // Smooth scrolling enhancement
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Enhanced mobile interactions
        if ('ontouchstart' in window) {
            const interactiveCards = document.querySelectorAll('.book-card, .genre-card, .book-themed-card');
            interactiveCards.forEach(function(card) {
                card.addEventListener('touchstart', function() {
                    this.style.transform = 'scale(0.95)';
                });
                card.addEventListener('touchend', function() {
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                });
            });
        }
    </script>
}

<style>
    /* Literary Theme Enhancements */
    .literary-hero {
        min-height: 70vh;
        background-attachment: fixed;
    }

    .min-vh-50 {
        min-height: 50vh;
    }

    .book-themed-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15) !important;
    }

    .genre-card {
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        border-radius: 15px !important;
    }

    .book-card {
        background: #fff;
        border-radius: 15px !important;
    }

    .book-card:hover .book-overlay {
        opacity: 0.9 !important;
    }

    /* Literary Fonts */
    .display-3, .display-6 {
        font-family: 'Georgia', serif;
        letter-spacing: -1px;
    }

    .blockquote p {
        font-family: 'Georgia', serif;
        font-size: 1.1rem;
    }

    /* Enhanced Animations */
    @@keyframes float {
        0%, 100% { 
            transform: translateY(0px) rotate(0deg); 
        }
        50% { 
            transform: translateY(-20px) rotate(2deg); 
        }
    }

    @@keyframes bookFloat {
        0%, 100% { 
            transform: translateY(0px) rotate(-2deg); 
        }
        50% { 
            transform: translateY(-15px) rotate(1deg); 
        }
    }

    .floating-books:nth-child(2) {
        animation: bookFloat 5s ease-in-out infinite;
    }

    /* Custom Scrollbar */
    ::-webkit-scrollbar {
        width: 10px;
    }

    ::-webkit-scrollbar-track {
        background: linear-gradient(to bottom, #f1f3f4, #e8eaed);
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        background: linear-gradient(to bottom, #0d6efd, #0a58ca);
        border-radius: 10px;
        border: 2px solid #f1f3f4;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(to bottom, #0a58ca, #084298);
    }

    /* Theme Color Consistency */
    .btn-primary {
        background: linear-gradient(135deg, #0d6efd, #0a58ca);
        border-color: #0d6efd;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #0a58ca, #084298);
        border-color: #0a58ca;
    }

    .text-primary {
        color: #0d6efd !important;
    }

    /* Category Filter Indicator */
    .category-filter-indicator {
        animation: slideDown 0.3s ease-out;
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Search Result Highlights */
    .book-item[style*="border"] {
        animation: highlightPulse 1s ease-in-out;
    }

    @@keyframes highlightPulse {
        0% { 
            box-shadow: 0 0 0 0 rgba(13, 110, 253, 0.7); 
        }
        70% { 
            box-shadow: 0 0 0 10px rgba(13, 110, 253, 0); 
        }
        100% { 
            box-shadow: 0 0 0 0 rgba(13, 110, 253, 0); 
        }
    }

    /* Responsive Typography */
    @@media (max-width: 768px) {
        .literary-hero {
            min-height: 60vh;
            padding: 2rem 0 !important;
        }
        
        .display-3 {
            font-size: 2.5rem !important;
        }
        
        .book-cover {
            height: 220px !important;
        }
        
        .floating-books {
            display: none !important;
        }
    }

    @@media (max-width: 576px) {
        .book-cover {
            height: 200px !important;
        }
        
        .book-title {
            font-size: 0.85rem !important;
            min-height: 2.4rem !important;
        }
        
        .display-3 {
            font-size: 2rem !important;
        }
    }

    /* Enhanced Visual Effects */
    .decorative-line {
        transition: all 0.3s ease;
    }

    .decorative-line:hover {
        transform: scaleX(1.2);
    }

    .search-container:hover {
        transform: translateY(-2px);
        box-shadow: 0 15px 35px rgba(13, 110, 253, 0.2) !important;
    }

    /* Bootstrap Theme Color Variables */
    :root {
        --bs-primary: #0d6efd;
        --bs-primary-rgb: 13, 110, 253;
        --bs-success: #198754;
        --bs-warning: #ffc107;
        --bs-danger: #dc3545;
        --bs-info: #0dcaf0;
    }
</style>
