@model Bulky.Models.ViewModels.OrderViewModel

@{
    ViewData["Title"] = $"Order Details #{Model.OrderHeader.Id.ToString("D6")} - BulkyWeb";
}

<!-- Order Details Hero Section -->
<section class="order-details-hero py-4 py-md-5" style="background: linear-gradient(135deg, #34495E 0%, #2C3E50 50%, #4A6741 100%); position: relative; overflow: hidden;">
    <!-- Decorative Background -->
    <div class="position-absolute w-100 h-100" style="top: 0; left: 0; opacity: 0.1; background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><text y=\"30\" font-size=\"25\" fill=\"%23ffffff\">??</text><text x=\"60\" y=\"70\" font-size=\"20\" fill=\"%23ffffff\">??</text></svg>'); background-size: 120px 120px;"></div>
    
    <div class="container position-relative">
        <div class="row align-items-center">
            <div class="col-12">
                <!-- Breadcrumb Navigation -->
                <nav aria-label="breadcrumb" class="mb-4">
                    <ol class="breadcrumb bg-white bg-opacity-10 p-3 rounded-3 border-0">
                        <li class="breadcrumb-item">
                            <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="text-decoration-none text-white">
                                <i class="bi bi-house-door me-1"></i>Home
                            </a>
                        </li>
                        <li class="breadcrumb-item">
                            <a asp-area="Customer" asp-controller="Order" asp-action="Index" class="text-decoration-none text-white">
                                <i class="bi bi-bag-check me-1"></i>My Orders
                            </a>
                        </li>
                        <li class="breadcrumb-item active text-warning fw-medium" aria-current="page">
                            <i class="bi bi-file-text me-1"></i>Order Details
                        </li>
                    </ol>
                </nav>

                <!-- Page Header -->
                <div class="row align-items-center">
                    <div class="col-12 col-md-8">
                        <h1 class="display-6 fw-bold text-white mb-2" style="font-family: 'Georgia', serif;">
                            <i class="bi bi-receipt me-3 text-warning"></i>
                            Order #@Model.OrderHeader.Id.ToString("D6")
                        </h1>
                        <p class="text-white opacity-75 mb-0">
                            <i class="bi bi-calendar me-1"></i>
                            Placed on @Model.OrderHeader.OrderDate.ToString("MMMM dd, yyyy 'at' h:mm tt")
                        </p>
                    </div>
                    <div class="col-12 col-md-4 text-md-end mt-3 mt-md-0">
                        <div class="d-flex flex-wrap gap-2 justify-content-md-end">
                            <span class="badge bg-@GetStatusColor(Model.OrderHeader.OrderStatus) px-4 py-2 fs-6">
                                <i class="bi bi-@GetStatusIcon(Model.OrderHeader.OrderStatus) me-1"></i>
                                @Model.OrderHeader.OrderStatus
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Order Details Content -->
<section class="order-details-content py-4 py-md-5">
    <div class="container">
        <div class="row g-4 g-lg-5">
            <!-- Left Column - Order Information -->
            <div class="col-12 col-xl-8">
                <!-- Order Items Card -->
                <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                    <div class="card-header text-white py-4" 
                         style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #8B4513, #A0522D);">
                        <h5 class="mb-0 fw-bold">
                            <i class="bi bi-bag-check me-2"></i>Order Items (@Model.OrderDetails.Count())
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <!-- Items Header (Desktop) -->
                        <div class="items-header d-none d-md-block bg-light p-3 border-bottom">
                            <div class="row fw-bold text-muted">
                                <div class="col-6">Product</div>
                                <div class="col-2 text-center">Price</div>
                                <div class="col-2 text-center">Quantity</div>
                                <div class="col-2 text-center">Subtotal</div>
                            </div>
                        </div>

                        <!-- Items List -->
                        <div class="items-list">
                            @foreach (var item in Model.OrderDetails)
                            {
                                var itemTotal = item.Price * item.Count;
                                
                                <div class="order-item p-3 p-md-4 border-bottom" data-item-id="@item.Id">
                                    <div class="row align-items-center g-3">
                                        <!-- Product Info -->
                                        <div class="col-12 col-md-6">
                                            <div class="d-flex align-items-center">
                                                <!-- Product Image -->
                                                <div class="product-image me-3 flex-shrink-0">
                                                    @if (!string.IsNullOrEmpty(item.Product?.ImageUrl))
                                                    {
                                                        <img src="@item.Product.ImageUrl" alt="@item.Product.Title" 
                                                             class="img-fluid rounded-3 shadow-sm" 
                                                             style="width: 70px; height: 90px; object-fit: cover;" />
                                                    }
                                                    else
                                                    {
                                                        <div class="book-placeholder d-flex align-items-center justify-content-center rounded-3 shadow-sm" 
                                                             style="width: 70px; height: 90px; background: linear-gradient(145deg, #8B4513, #A0522D);">
                                                            <i class="bi bi-book text-white fs-5"></i>
                                                        </div>
                                                    }
                                                </div>
                                                
                                                <!-- Product Details -->
                                                <div class="product-details flex-grow-1">
                                                    <h6 class="product-title fw-bold mb-2 text-primary" style="font-family: 'Georgia', serif;">
                                                        @item.Product?.Title
                                                    </h6>
                                                    <p class="product-author text-muted mb-2 small">
                                                        <i class="bi bi-pen me-1"></i>by @item.Product?.Author
                                                    </p>
                                                    @if (item.Product?.Category != null)
                                                    {
                                                        <span class="badge bg-secondary bg-gradient small">
                                                            <i class="bi bi-collection me-1"></i>@item.Product.Category.Name
                                                        </span>
                                                    }
                                                    
                                                    <!-- Mobile Display -->
                                                    <div class="d-md-none mt-3">
                                                        <div class="row g-2">
                                                            <div class="col-4">
                                                                <small class="text-muted">Price:</small>
                                                                <div class="fw-bold text-success">@item.Price.ToString("C")</div>
                                                            </div>
                                                            <div class="col-4">
                                                                <small class="text-muted">Qty:</small>
                                                                <div class="fw-bold text-primary">@item.Count</div>
                                                            </div>
                                                            <div class="col-4">
                                                                <small class="text-muted">Total:</small>
                                                                <div class="fw-bold text-warning">@itemTotal.ToString("C")</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Desktop Price Display -->
                                        <div class="col-md-2 text-center d-none d-md-block">
                                            <div class="fw-bold text-success fs-6">@item.Price.ToString("C")</div>
                                        </div>

                                        <!-- Desktop Quantity -->
                                        <div class="col-md-2 text-center d-none d-md-block">
                                            <span class="fw-bold text-primary fs-5">@item.Count</span>
                                        </div>

                                        <!-- Desktop Subtotal -->
                                        <div class="col-md-2 text-center d-none d-md-block">
                                            <div class="fw-bold text-warning fs-5">@itemTotal.ToString("C")</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Shipping Information (if available) -->
                @if (!string.IsNullOrEmpty(Model.OrderHeader.TrackingNumber) || !string.IsNullOrEmpty(Model.OrderHeader.Carrier))
                {
                    <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                        <div class="card-header text-white py-4" 
                             style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #3498DB, #5DADE2);">
                            <h5 class="mb-0 fw-bold">
                                <i class="bi bi-truck me-2"></i>Shipping Information
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <div class="row g-4">
                                @if (!string.IsNullOrEmpty(Model.OrderHeader.Carrier))
                                {
                                    <div class="col-12 col-md-6">
                                        <div class="shipping-detail">
                                            <div class="d-flex align-items-center">
                                                <div class="icon-wrapper bg-primary bg-opacity-10 rounded-circle p-3 me-3">
                                                    <i class="bi bi-truck text-primary fs-5"></i>
                                                </div>
                                                <div>
                                                    <label class="text-muted small fw-medium">Carrier</label>
                                                    <div class="fw-bold text-dark fs-6">@Model.OrderHeader.Carrier</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Model.OrderHeader.TrackingNumber))
                                {
                                    <div class="col-12 col-md-6">
                                        <div class="shipping-detail">
                                            <div class="d-flex align-items-center">
                                                <div class="icon-wrapper bg-success bg-opacity-10 rounded-circle p-3 me-3">
                                                    <i class="bi bi-box-seam text-success fs-5"></i>
                                                </div>
                                                <div>
                                                    <label class="text-muted small fw-medium">Tracking Number</label>
                                                    <div class="fw-bold text-dark fs-6">
                                                        <a href="#" class="text-decoration-none" onclick="trackPackage('@Model.OrderHeader.TrackingNumber')">
                                                            @Model.OrderHeader.TrackingNumber
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (Model.OrderHeader.ShippingDate != default(DateTime))
                                {
                                    <div class="col-12">
                                        <div class="shipping-detail">
                                            <div class="d-flex align-items-center">
                                                <div class="icon-wrapper bg-info bg-opacity-10 rounded-circle p-3 me-3">
                                                    <i class="bi bi-calendar-check text-info fs-5"></i>
                                                </div>
                                                <div>
                                                    <label class="text-muted small fw-medium">Shipping Date</label>
                                                    <div class="fw-bold text-dark fs-6">@Model.OrderHeader.ShippingDate.ToString("MMMM dd, yyyy")</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- Shipping Address Card -->
                <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                    <div class="card-header text-white py-4" 
                         style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #4A6741, #578553);">
                        <h5 class="mb-0 fw-bold">
                            <i class="bi bi-geo-alt me-2"></i>Delivery Address
                        </h5>
                    </div>
                    <div class="card-body p-4">
                        <div class="shipping-address">
                            <div class="d-flex align-items-start">
                                <div class="icon-wrapper bg-info bg-opacity-10 rounded-circle p-3 me-3">
                                    <i class="bi bi-house text-info fs-5"></i>
                                </div>
                                <div>
                                    <div class="fw-bold text-dark mb-1">@Model.OrderHeader.Name</div>
                                    <div class="text-muted">
                                        @Model.OrderHeader.StreetAddress<br>
                                        @Model.OrderHeader.City, @Model.OrderHeader.State @Model.OrderHeader.PostalCode<br>
                                        <i class="bi bi-telephone me-1"></i>@Model.OrderHeader.PhoneNumber
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Order Summary & Actions -->
            <div class="col-12 col-xl-4">
                <div class="order-summary-section position-sticky" style="top: 20px;">
                    <!-- Order Summary Card -->
                    <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                        <div class="card-header text-white py-4" 
                             style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #27AE60, #2ECC71);">
                            <h5 class="mb-0 fw-bold">
                                <i class="bi bi-calculator me-2"></i>Order Summary
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <div class="summary-details">
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="text-muted">Items:</span>
                                    <span class="fw-medium">@Model.OrderDetails.Sum(x => x.Count) books</span>
                                </div>
                                
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="text-muted">Subtotal:</span>
                                    <span class="fw-medium">@Model.OrderHeader.OrderTotal.ToString("C")</span>
                                </div>
                                
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="text-muted">Shipping:</span>
                                    <span class="text-success fw-medium">FREE</span>
                                </div>
                                
                                <div class="d-flex justify-content-between mb-3">
                                    <span class="text-muted">Tax:</span>
                                    <span class="fw-medium">$0.00</span>
                                </div>
                                
                                <hr class="my-4">
                                
                                <div class="d-flex justify-content-between mb-4">
                                    <span class="h5 fw-bold">Total:</span>
                                    <span class="h4 fw-bold text-success">@Model.OrderHeader.OrderTotal.ToString("C")</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Status Card -->
                    <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                        <div class="card-header text-white py-4" 
                             style="border-radius: 15px 15px 0 0; background: linear-gradient(135deg, #E74C3C, #C0392B);">
                            <h5 class="mb-0 fw-bold">
                                <i class="bi bi-flag me-2"></i>Order Status
                            </h5>
                        </div>
                        <div class="card-body p-4">
                            <div class="status-timeline">
                                <div class="status-item mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="status-icon bg-@GetStatusColor(Model.OrderHeader.OrderStatus) text-white rounded-circle p-2 me-3">
                                            <i class="bi bi-@GetStatusIcon(Model.OrderHeader.OrderStatus)"></i>
                                        </div>
                                        <div>
                                            <div class="fw-bold">@Model.OrderHeader.OrderStatus</div>
                                            <small class="text-muted">Current Status</small>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="status-item mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="status-icon bg-@GetPaymentColor(Model.OrderHeader.PaymentStatus) text-white rounded-circle p-2 me-3">
                                            <i class="bi bi-@GetPaymentIcon(Model.OrderHeader.PaymentStatus)"></i>
                                        </div>
                                        <div>
                                            <div class="fw-bold">@Model.OrderHeader.PaymentStatus</div>
                                            <small class="text-muted">Payment Status</small>
                                        </div>
                                    </div>
                                </div>

                                <!-- Payment Alert for Delayed Payment -->
                                @if (Model.OrderHeader.PaymentStatus == Bulky.Utility.SD.PaymentStatusDelayedForApproval)
                                {
                                    <div class="alert alert-warning border-0 mt-3" style="background: rgba(255, 193, 7, 0.1); border-left: 4px solid #ffc107 !important;">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        <strong>Payment Required:</strong> Your order is awaiting payment. Complete payment to proceed with processing.
                                    </div>
                                }
                                else if (Model.OrderHeader.PaymentStatus == Bulky.Utility.SD.PaymentStatusPending)
                                {
                                    <div class="alert alert-info border-0 mt-3" style="background: rgba(13, 202, 240, 0.1); border-left: 4px solid #0dcaf0 !important;">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>Payment Pending:</strong> Complete your payment to confirm and process your order.
                                    </div>
                                }

                                <!-- Pay Now button for Delayed Approval and Pending Payment -->
                                <div class="d-grid gap-2">
                                @if (Model.OrderHeader.PaymentStatus == Bulky.Utility.SD.PaymentStatusDelayedForApproval || 
                                     Model.OrderHeader.PaymentStatus == Bulky.Utility.SD.PaymentStatusPending)
                                {
                                    <a asp-action="PayNow" asp-route-id="@Model.OrderHeader.Id" 
                                       class="btn btn-success fw-medium">
                                        <i class="bi bi-credit-card me-2"></i>Pay Now
                                    </a>
                                }
                                
                                @if (Model.OrderHeader.OrderStatus == Bulky.Utility.SD.StatusShipped && !string.IsNullOrEmpty(Model.OrderHeader.TrackingNumber))
                                {
                                    <button class="btn btn-info fw-medium" onclick="trackPackage('@Model.OrderHeader.TrackingNumber')">
                                        <i class="bi bi-geo-alt me-2"></i>Track Package
                                    </button>
                                }
                                
                                <button class="btn btn-outline-primary fw-medium" onclick="printInvoice()">
                                    <i class="bi bi-printer me-2"></i>Print Invoice
                                </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Customer Actions Card -->
                    <div class="card border-0 shadow-lg mb-4" style="border-radius: 15px;">
                        <div class="card-body p-4">
                            <h6 class="fw-bold mb-3 text-primary">
                                <i class="bi bi-tools me-2"></i>Available Actions
                            </h6>
                            
                            <div class="d-grid gap-2">
                                <a asp-area="Customer" asp-controller="Order" asp-action="Index" 
                                   class="btn btn-primary fw-medium">
                                    <i class="bi bi-list me-2"></i>Back to Orders
                                </a>
                                
                                <a asp-area="Customer" asp-controller="Home" asp-action="Index" 
                                   class="btn btn-outline-secondary fw-medium">
                                    <i class="bi bi-house-door me-2"></i>Continue Shopping
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        function trackPackage(trackingNumber) {
            // You can customize this to redirect to the carrier's tracking page
            alert('Tracking number: ' + trackingNumber);
            // Example: window.open('https://www.ups.com/track?tracknum=' + trackingNumber, '_blank');
        }

        function printInvoice() {
            window.print();
        }
    </script>
}

@functions {
    string GetStatusColor(string status)
    {
        return status switch
        {
            Bulky.Utility.SD.StatusPending => "warning",
            Bulky.Utility.SD.StatusApproved => "info", 
            Bulky.Utility.SD.StatusInProcess => "primary",
            Bulky.Utility.SD.StatusShipped => "success",
            Bulky.Utility.SD.StatusCancelled => "danger",
            Bulky.Utility.SD.StatusRefunded => "secondary",
            _ => "secondary"
        };
    }

    string GetStatusIcon(string status)
    {
        return status switch
        {
            Bulky.Utility.SD.StatusPending => "hourglass-split",
            Bulky.Utility.SD.StatusApproved => "check-circle",
            Bulky.Utility.SD.StatusInProcess => "gear",
            Bulky.Utility.SD.StatusShipped => "truck",
            Bulky.Utility.SD.StatusCancelled => "x-circle",
            Bulky.Utility.SD.StatusRefunded => "arrow-counterclockwise",
            _ => "question-circle"
        };
    }

    string GetPaymentColor(string status)
    {
        return status switch
        {
            Bulky.Utility.SD.PaymentStatusPending => "warning",
            Bulky.Utility.SD.PaymentStatusApproved => "success",
            Bulky.Utility.SD.PaymentStatusDelayedForApproval => "info",
            Bulky.Utility.SD.PaymentStatusRejected => "danger",
            _ => "secondary"
        };
    }

    string GetPaymentIcon(string status)
    {
        return status switch
        {
            Bulky.Utility.SD.PaymentStatusPending => "clock",
            Bulky.Utility.SD.PaymentStatusApproved => "check-circle",
            Bulky.Utility.SD.PaymentStatusDelayedForApproval => "hourglass-split",
            Bulky.Utility.SD.PaymentStatusRejected => "x-circle",
            _ => "question-circle"
        };
    }
}